version: '3.8'
services:
  db:
    image: mysql/mysql-server:8.0
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: laravel
    volumes:
      - db_data:/var/lib/mysql:Z
    restart: always
    networks:
      - laravel
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      - db
    volumes:
      - ./backend:/app
    environment:
      DB_CONNECTION: mysql
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: laravel
      DB_USERNAME: laravel
      DB_PASSWORD: laravel
      APP_ENV: production
      LIGHTHOUSE_CACHE_ENABLE: 'false'
    ports:
      - 8000:8000
    networks:
      - laravel
    restart: always
    command: >
      bash -c "composer install && php artisan lighthouse:clear-cache && php artisan migrate --force && php artisan serve --host=0.0.0.0 --port=8000"

  backend_tests:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      - db
    volumes:
      - ./backend:/app
    environment:
      DB_CONNECTION: mysql
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: laravel
      DB_USERNAME: laravel
      DB_PASSWORD: laravel
      APP_ENV: testing
      LIGHTHOUSE_CACHE_ENABLE: 'false'
    networks:
      - laravel
    restart: on-failure
    command: >
      bash -c "composer install && php artisan lighthouse:clear-cache && php artisan migrate && php artisan test --testsuite=Feature"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    volumes:
      - ./frontend:/app
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000/graphql
    restart: always
    networks:
      - laravel

networks:
  laravel:
    driver: bridge

volumes:
  db_data:
    driver: local
